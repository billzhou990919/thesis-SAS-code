proc sql;
    create table mscan.outpatient as
    select a.*, b.day0
    from mscan.outpatient as a
    left join mscan.analytical_cohort as b
    on a.enrolid = b.enrolid;
quit;
proc sql;
    create table mscan.inpatient as
    select a.*, b.day0
    from mscan.inpatient as a
    left join mscan.analytical_cohort as b
    on a.enrolid = b.enrolid;
quit;

/////////////////diabetes///////////
data flag_diabetes;
    set mscan.outpatient;
    if (0 <= (day0 - svcdate) <=365) and (dx1 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or 
        dx2 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or 
        dx3 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or 
        dx4 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_diabetes nodupkey;
    by enrolid;
    where flag = 1;
run;
data flag_diabetes_ip;
    set mscan.inpatient;
    if (0 <= (day0 - admdate) <=365) and (dx1 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or 
        dx2 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or 
        dx3 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or 
        dx4 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx5 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx6 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx7 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx8 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx9 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx10 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx11 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx12 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx13 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx14 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13') or
        dx15 in: ('250', 'E08', 'E09', 'E10', 'E11', 'E13')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_diabetes_ip nodupkey;
    by enrolid;
    where flag = 1;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_diabetes(in=b);
    by enrolid;
    if b then diabetes_op = 1;
    else diabetes_op = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_diabetes_ip(in=b);
    by enrolid;
    if b then diabetes_ip = 1;
    else diabetes_ip = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    set mscan.analytical_cohort;
    if (diabetes_ip = 1 or diabetes_op = 1) then diabetes = 1; else diabetes = 0;
    drop diabetes_ip diabetes_op;
run;
/////////////////stroke and systemic embolism///////////
data flag_stk;
    set mscan.outpatient;
    if (0 <= (day0 - svcdate) <=365) and (dx1 in: ('43301', '43311', '43321', '43331',
                '43381', '43391', '43401', '43411', '43491', '436', 'I63',
                '444', 'I74') or 
        dx2 in: ('43301', '43311', '43321', '43331',
                '43381', '43391', '43401', '43411', '43491', '436', 'I63',
                '444', 'I74') or 
        dx3 in: ('43301', '43311', '43321', '43331',
                '43381', '43391', '43401', '43411', '43491', '436', 'I63',
                '444', 'I74') or 
        dx4 in: ('43301', '43311', '43321', '43331',
                '43381', '43391', '43401', '43411', '43491', '436', 'I63',
                '444', 'I74')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_stk nodupkey;
    by enrolid;
    where flag = 1;
run;
data flag_stk_ip;
    set mscan.inpatient;
    if (0 <= (day0 - admdate) <=365) and (dx1 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or 
        dx2 in: ('43301', '43311', '43321', '43331', '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or 
        dx3 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or 
        dx4 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx5 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx6 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx7 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx8 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx9 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx10 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx11 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx12 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx13 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx14 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74') or
        dx15 in: ('43301', '43311', '43321', '43331',                 '43381', '43391', '43401', '43411', '43491', '436', 'I63',                 '444', 'I74')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_stk_ip nodupkey;
    by enrolid;
    where flag = 1;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_stk(in=b);
    by enrolid;
    if b then stk_op = 1;
    else stk_op = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_stk_ip(in=b);
    by enrolid;
    if b then stk_ip = 1;
    else stk_ip = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    set mscan.analytical_cohort;
    if (stk_ip = 1 or stk_op = 1) then stroke_se = 1; else stroke_se = 0;
    drop stk_ip stk_op;
run;
/////////////////prior major bleeding///////////
data flag_bleeding;
    set mscan.outpatient;
    if (0 <= (day0 - svcdate) <=365) and (dx1 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or 
        dx2 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or 
        dx3 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or 
        dx4 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') ) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_bleeding nodupkey;
    by enrolid;
    where flag = 1;
run;
data flag_bleeding_ip;
    set mscan.inpatient;
    if (0 <= (day0 - admdate) <=365) and (dx1 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or 
        dx2 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or 
        dx3 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or 
        dx4 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or
        dx5 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or
        dx6 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')  or
        dx7 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx8 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx9 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx10 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx11 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx12 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx13 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx14 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04') or
        dx15 in: ('430', '431', '4320', '4321',
                '4329', '8520', '8522', '8524', '8530', '4552', '4555',
                '4558', '4560', '45620', '5307', '53082', '5310', '5311',
                '5312', '5313', '5314', '5315', '5316',
                '5320', '5321', '5322', '5323', '5324', '5325', '5326',
                '5330', '5331', '5332', '5333', '5334', '5335', '5336',
                '5340', '5341', '5342', '5343', '5344', '5345', '5346', '53501',
                '53561', '53783', '56202', '56203', '56212', '56213',
                '56881', '5693', '56985', '5780', '5781', '5789', '4230',
                '4590', '5997', '71911', '7847', '7848', '7863', 'I60', 'I61',
                'I62', 'S064', 'S065', 'S066', 'I850', 'K226', 'K250', 'K251',
                'K252', 'K254', 'K255', 'K256', 'K260', 'K261', 'K262', 'K264',
                'K265', 'K266', 'K270', 'K271', 'K272', 'K274', 'K275', 'K276',
                'K280', 'K281', 'K282', 'K284', 'K285', 'K286', 'K2901', 'K920',
                'K921', 'K922' 'I312', 'R58', 'R31', 'M25019', 'R04')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_bleeding_ip nodupkey;
    by enrolid;
    where flag = 1;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_bleeding(in=b);
    by enrolid;
    if b then bleeding_op = 1;
    else bleeding_op = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_bleeding_ip(in=b);
    by enrolid;
    if b then bleeding_ip = 1;
    else bleeding_ip = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    set mscan.analytical_cohort;
    if (bleeding_ip = 1 or bleeding_op = 1) then prior_bleeding = 1; else prior_bleeding = 0;
    drop bleeding_ip bleeding_op;
run;
/////////////////hypertension///////////
data flag_hyptertension;
    set mscan.outpatient;
    if (0 <= (day0 - svcdate) <=365) and (dx1 in: ('401', 'I10')  or 
        dx2 in: ('401', 'I10')  or 
        dx3 in: ('401', 'I10')  or 
        dx4 in: ('401', 'I10') ) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_hyptertension nodupkey;
    by enrolid;
    where flag = 1;
run;
data flag_hyptertension_ip;
    set mscan.inpatient;
    if (0 <= (day0 - admdate) <=365) and (dx1 in: ('401', 'I10')  or 
        dx2 in: ('401', 'I10')  or 
        dx3 in: ('401', 'I10')  or 
        dx4 in: ('401', 'I10') or
        dx5 in: ('401', 'I10') or
        dx6 in: ('401', 'I10') or
        dx7 in: ('401', 'I10') or
        dx8 in: ('401', 'I10') or
        dx9 in: ('401', 'I10') or
        dx10 in: ('401', 'I10') or
        dx11 in: ('401', 'I10') or
        dx12 in: ('401', 'I10') or
        dx13 in: ('401', 'I10') or
        dx14 in: ('401', 'I10') or
        dx15 in: ('401', 'I10')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_hyptertension_ip nodupkey;
    by enrolid;
    where flag = 1;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_hyptertension(in=b);
    by enrolid;
    if b then hyptertension_op = 1;
    else hyptertension_op = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_hyptertension_ip(in=b);
    by enrolid;
    if b then hyptertension_ip = 1;
    else hyptertension_ip = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    set mscan.analytical_cohort;
    if (hyptertension_ip = 1 or hyptertension_op = 1) then hyptertension = 1; else hyptertension = 0;
    drop hyptertension_ip hyptertension_op;
run;
/////////////////Myocardial infarction, peripheral artery disease, or aortic plaque///////////
data flag_mi;
    set mscan.outpatient;
    if (0 <= (day0 - svcdate) <=365) and (dx1 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or 
        dx2 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or 
        dx3 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or 
        dx4 in: ('410', 'I21', '4439', 'I739', '4400', 'I700')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_mi nodupkey;
    by enrolid;
    where flag = 1;
run;
data flag_mi_ip;
    set mscan.inpatient;
    if (0 <= (day0 - admdate) <=365) and (dx1 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or 
        dx2 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or 
        dx3 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or 
        dx4 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx5 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx6 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx7 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx8 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx9 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx10 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx11 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx12 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx13 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx14 in: ('410', 'I21', '4439', 'I739', '4400', 'I700') or
        dx15 in: ('410', 'I21', '4439', 'I739', '4400', 'I700')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_mi_ip nodupkey;
    by enrolid;
    where flag = 1;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_mi(in=b);
    by enrolid;
    if b then mi_op = 1;
    else mi_op = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_mi_ip(in=b);
    by enrolid;
    if b then mi_ip = 1;
    else mi_ip = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    set mscan.analytical_cohort;
    if (mi_ip = 1 or mi_op = 1) then mi = 1; else mi = 0;
    drop mi_ip mi_op;
run;
/////////////////alcohol///////////
data flag_alcohol;
    set mscan.outpatient;
    if (0 <= (day0 - svcdate) <=365) and (dx1 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or 
        dx2 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or 
        dx3 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or 
        dx4 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_alcohol nodupkey;
    by enrolid;
    where flag = 1;
run;
data flag_alcohol_ip;
    set mscan.inpatient;
    if (0 <= (day0 - admdate) <=365) and (dx1 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or 
        dx2 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or 
        dx3 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or 
        dx4 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx5 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx6 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx7 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx8 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx9 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx10 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx11 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx12 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx13 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx14 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102') or
        dx15 in: ('3050', '3030', 'F100', 'F101', '3039', 'F102')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_alcohol_ip nodupkey;
    by enrolid;
    where flag = 1;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_alcohol(in=b);
    by enrolid;
    if b then alcohol_op = 1;
    else alcohol_op = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_alcohol_ip(in=b);
    by enrolid;
    if b then alcohol_ip = 1;
    else alcohol_ip = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    set mscan.analytical_cohort;
    if (alcohol_ip = 1 or alcohol_op = 1) then alcohol = 1; else alcohol = 0;
    drop alcohol_ip alcohol_op;
run;
/////////////////Congestive heart failure///////////
data flag_chf;
    set mscan.outpatient;
    if (0 <= (day0 - svcdate) <=365) and (dx1 in: ('4280', 'I502', 'I503', 'I504') or 
        dx2 in: ('4280', 'I502', 'I503', 'I504') or 
        dx3 in: ('4280', 'I502', 'I503', 'I504') or 
        dx4 in: ('4280', 'I502', 'I503', 'I504')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_chf nodupkey;
    by enrolid;
    where flag = 1;
run;
data flag_chf_ip;
    set mscan.inpatient;
    if (0 <= (day0 - admdate) <=365) and (dx1 in: ('4280', 'I502', 'I503', 'I504') or 
        dx2 in: ('4280', 'I502', 'I503', 'I504') or 
        dx3 in: ('4280', 'I502', 'I503', 'I504') or 
        dx4 in: ('4280', 'I502', 'I503', 'I504') or
        dx5 in: ('4280', 'I502', 'I503', 'I504') or
        dx6 in: ('4280', 'I502', 'I503', 'I504') or
        dx7 in: ('4280', 'I502', 'I503', 'I504') or
        dx8 in: ('4280', 'I502', 'I503', 'I504') or
        dx9 in: ('4280', 'I502', 'I503', 'I504') or
        dx10 in: ('4280', 'I502', 'I503', 'I504') or
        dx11 in: ('4280', 'I502', 'I503', 'I504') or
        dx12 in: ('4280', 'I502', 'I503', 'I504') or
        dx13 in: ('4280', 'I502', 'I503', 'I504') or
        dx14 in: ('4280', 'I502', 'I503', 'I504') or
        dx15 in: ('4280', 'I502', 'I503', 'I504')) then flag = 1;
    else flag = 0;
    keep enrolid flag;
run;
proc sort data=flag_chf_ip nodupkey;
    by enrolid;
    where flag = 1;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_chf(in=b);
    by enrolid;
    if b then chf_op = 1;
    else chf_op = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    merge mscan.analytical_cohort(in=a) flag_chf_ip(in=b);
    by enrolid;
    if b then chf_ip = 1;
    else chf_ip = 0;
    drop flag;
run;
data mscan.analytical_cohort;
    set mscan.analytical_cohort;
    if (chf_ip = 1 or chf_op = 1) then chf = 1; else chf = 0;
    drop chf_ip chf_op;
run;
